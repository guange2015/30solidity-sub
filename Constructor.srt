1
00:00:00,000 --> 00:00:01,060
you
您可以在智能合约中设置

2
00:00:01,060 --> 00:00:03,730
inside the smart contract you can set
您可以在智能合约中设置

3
00:00:03,730 --> 00:00:06,310
state variables to a certain value when
使用特殊合同创建合同时，将状态变量设置为一定值

4
00:00:06,310 --> 00:00:08,830
a contract is created using a special
使用特殊合同创建合同时，将状态变量设置为一定值

5
00:00:08,830 --> 00:00:11,080
function called constructor in this
该视频中称为构造函数的函数，我们将介绍基本的

6
00:00:11,080 --> 00:00:13,000
video we're gonna go over the basic
该视频中称为构造函数的函数，我们将介绍基本的

7
00:00:13,000 --> 00:00:16,660
syntax for writing constructors so first
用于编写构造函数的语法，因此首先是构造函数的构造函数是什么

8
00:00:16,660 --> 00:00:20,109
what is a constructor a constructor is
用于编写构造函数的语法，因此首先是构造函数的构造函数是什么

9
00:00:20,109 --> 00:00:22,449
an optional function that is executed
可选功能，仅在创建合同之前执行一次

10
00:00:22,449 --> 00:00:25,289
only once before a contract is created
可选功能，仅在创建合同之前执行一次

11
00:00:25,289 --> 00:00:28,330
this function can take in inputs and
该功能可以接受输入，并且可以在功能主体内部设置

12
00:00:28,330 --> 00:00:30,939
inside the function body you can set the
该功能可以接受输入，并且可以在功能主体内部设置

13
00:00:30,939 --> 00:00:33,309
state variables to certain values that
将变量声明为想要的某些值，以便定义构造函数

14
00:00:33,309 --> 00:00:37,270
you want so to define a constructor we
将变量声明为想要的某些值，以便定义构造函数

15
00:00:37,270 --> 00:00:41,190
start with the keyword constructor
以关键字构造函数开头，后跟括号，然后在

16
00:00:41,190 --> 00:00:44,739
followed by parentheses and inside the
以关键字构造函数开头，后跟括号，然后在

17
00:00:44,739 --> 00:00:47,340
parentheses be passing some parameters
括号中传递了一些参数，例如，您将传递一些无符号的

18
00:00:47,340 --> 00:00:50,680
for example you'll pass in some unsigned
括号中传递了一些参数，例如，您将传递一些无符号的

19
00:00:50,680 --> 00:00:57,280
integers X and Y and we declare the
整数X和Y，我们将构造函数声明为内部的公共函数

20
00:00:57,280 --> 00:01:02,469
constructor as a public function inside
整数X和Y，我们将构造函数声明为内部的公共函数

21
00:01:02,469 --> 00:01:05,260
the constructor body we that set some
设置一些变量的构造函数主体

22
00:01:05,260 --> 00:01:06,210
variables
设置一些变量的构造函数主体

23
00:01:06,210 --> 00:01:10,600
we'll set the unsigned integer X to the
我们将无符号整数X设置为状态变量X，同样将

24
00:01:10,600 --> 00:01:16,180
state variable X and likewise for the
我们将无符号整数X设置为状态变量X，同样将

25
00:01:16,180 --> 00:01:21,970
unsigned integer Y finally that's
无符号整数Y最后被声明为状态变量XY

26
00:01:21,970 --> 00:01:25,650
declared a state variable XY
无符号整数Y最后被声明为状态变量XY

27
00:01:25,650 --> 00:01:33,270
[Music]
 [音乐]因此，当我们部署此合同时，

28
00:01:33,270 --> 00:01:36,460
so when we deploy this contract becomes
 [音乐]因此，当我们部署此合同时，

29
00:01:36,460 --> 00:01:39,130
chapter will be called and it will set
章节将被调用，并将状态变量x和y设置为

30
00:01:39,130 --> 00:01:41,439
the state variables x and y to the
章节将被调用，并将状态变量x和y设置为

31
00:01:41,439 --> 00:01:44,799
parameters that we passed in let's see
我们传入的参数首先让我们看一个示例并进行编译

32
00:01:44,799 --> 00:01:47,289
an example first go ahead and compile
我们传入的参数首先让我们看一个示例并进行编译

33
00:01:47,289 --> 00:01:49,979
this contract
这份合同

34
00:01:50,039 --> 00:01:52,899
next we'll deploy the contract but
下一步，我们将部署合同，但是在执行此操作之前，您需要先传递一些

35
00:01:52,899 --> 00:01:54,909
before we do that you'll pass in some
下一步，我们将部署合同，但是在执行此操作之前，您需要先传递一些

36
00:01:54,909 --> 00:01:58,030
parameters for x and y into the contract
x和y的参数进入合约，您将传递数字1和2并点击

37
00:01:58,030 --> 00:02:02,890
you're passing number 1 and 2 and hit
x和y的参数进入合约，您将传递数字1和2并点击

38
00:02:02,890 --> 00:02:06,640
deploy once the contract is deployed
部署合同后部署，让我们检查一下我们的状态变量x

39
00:02:06,640 --> 00:02:09,098
let's check that our state variables x
部署合同后部署，让我们检查一下我们的状态变量x

40
00:02:09,098 --> 00:02:10,959
and y we're set to the parameters that
和y，我们设置为传递给我们的参数，向下滚动到部署

41
00:02:10,959 --> 00:02:14,260
we passed in scroll down to the deploy
和y，我们设置为传递给我们的参数，向下滚动到部署

42
00:02:14,260 --> 00:02:16,750
contract and let's check the value for x
收缩，让我们检查x和yx的值等于1且y等于

43
00:02:16,750 --> 00:02:21,610
and y x is equal to 1 and y is equal to
收缩，让我们检查x和yx的值等于1且y等于

44
00:02:21,610 --> 00:02:24,459
2 that's the exact value that we passed
2这就是我们传递给构造函数的确切值，就像

45
00:02:24,459 --> 00:02:27,280
into our constructor and just like a
2这就是我们传递给构造函数的确切值，就像

46
00:02:27,280 --> 00:02:29,920
regular function a constructor has
构造函数可以访问特殊变量（如消息）的常规函数

47
00:02:29,920 --> 00:02:33,489
access to special variables like message
构造函数可以访问特殊变量（如消息）的常规函数

48
00:02:33,489 --> 00:02:39,280
the sender and block the timestamp let's
发送方并阻止时间戳，让我们将这些特殊变量存储到

49
00:02:39,280 --> 00:02:41,380
store these special variables into a
发送方并阻止时间戳，让我们将这些特殊变量存储到

50
00:02:41,380 --> 00:02:44,290
state variable we will declare two state
状态变量，我们将声明两个状态变量以存储这些变量的值

51
00:02:44,290 --> 00:02:46,599
variables to store the values of these
状态变量，我们将声明两个状态变量以存储这些变量的值

52
00:02:46,599 --> 00:02:49,690
special variables you'll store message
您将在消息状态中将消息点发件人存储的特殊变量称为状态变量

53
00:02:49,690 --> 00:02:51,940
dot sender in a state variable called
您将在消息状态中将消息点发件人存储的特殊变量称为状态变量

54
00:02:51,940 --> 00:02:54,040
owner and we'll store block that
所有者，我们将把该时间戳记存储在一个状态变量中，该状态变量称为

55
00:02:54,040 --> 00:02:56,109
timestamp in a state variable called
所有者，我们将把该时间戳记存储在一个状态变量中，该状态变量称为

56
00:02:56,109 --> 00:02:59,739
created at once the state variables are
立即定义状态变量创建的代码，让我们将其分配给

57
00:02:59,739 --> 00:03:01,930
defined let's assign them inside the
立即定义状态变量创建的代码，让我们将其分配给

58
00:03:01,930 --> 00:03:04,569
constructor set the owner to message
构造函数将所有者设置为消息发件人，并创建应用程序以阻止该消息的发送者

59
00:03:04,569 --> 00:03:08,019
sender and created app to block that
构造函数将所有者设置为消息发件人，并创建应用程序以阻止该消息的发送者

60
00:03:08,019 --> 00:03:11,200
timestamp go ahead and recompile this
时间戳记继续，重新编译此合同，然后重新部署和传递

61
00:03:11,200 --> 00:03:17,650
contract and redeploy it and passing
时间戳记继续，重新编译此合同，然后重新部署和传递

62
00:03:17,650 --> 00:03:19,870
some parameters into the constructor
这次将一些参数传入构造函数中，我将传入3＆4并进行部署

63
00:03:19,870 --> 00:03:23,139
this time I'll pass in 3 & 4 and deploy
这次将一些参数传入构造函数中，我将传入3＆4并进行部署

64
00:03:23,139 --> 00:03:26,230
it once the new contract is deployed
一旦部署了新合同，让我们检查所有者和

65
00:03:26,230 --> 00:03:29,139
let's check the values of owner and
一旦部署了新合同，让我们检查所有者和

66
00:03:29,139 --> 00:03:32,010
created at
创建于

67
00:03:32,910 --> 00:03:35,890
for a creative you get the UNIX
对于广告素材，您可以在合同签订时获得UNIX时间戳。

68
00:03:35,890 --> 00:03:38,080
timestamp when this contract was
对于广告素材，您可以在合同签订时获得UNIX时间戳。

69
00:03:38,080 --> 00:03:40,870
deployed the owner is set to message the
部署所有者被设置为向发件人发送消息，在这种情况下，发件人是第一个

70
00:03:40,870 --> 00:03:43,390
sender which in this case is a first
部署所有者被设置为向发件人发送消息，在这种情况下，发件人是第一个

71
00:03:43,390 --> 00:03:47,230
account available in remix that covers
可用于混音的帐户，涵盖构造函数的基本语法

72
00:03:47,230 --> 00:03:51,260
the basic syntax for a constructor
可用于混音的帐户，涵盖构造函数的基本语法

73
00:03:51,260 --> 00:03:53,959
in the next video who cover inheritance
在下一个介绍继承的视频中，之后我们将重新审视如何调用

74
00:03:53,959 --> 00:03:56,930
and after that we'll revisit how to call
在下一个介绍继承的视频中，之后我们将重新审视如何调用

75
00:03:56,930 --> 00:03:59,989
constructors for parent contracts thanks
父合同的构造函数，感谢您的关注，敬请期待。

76
00:03:59,989 --> 00:04:02,030
for watching and see you in the next
父合同的构造函数，感谢您的关注，敬请期待。

77
00:04:02,030 --> 00:04:04,360
video
视频

